import { ConversationFlavor } from '@grammyjs/conversations';
import { User } from '@prisma/client';
import { CommandContext, Context } from 'grammy';
import { createFormKeyboard, menuKeyboard } from './keyboards';

export interface IForm {
  form_name?: string;
  form_gender?: string;
  form_looking_for?: string;
  form_desc?: string;
  form_image_id?: string;
  form_city?: string;
  form_age?: number;
  form_region?: string;
}

interface IReply {
  firstReply: string;
  warningReply: string;
}

export type schemaShapes =
  | 'form_name'
  | 'form_gender'
  | 'form_looking_for'
  | 'form_desc'
  | 'form_image_id'
  | 'form_city'
  | 'form_age';

type MyContext = Context & ConversationFlavor;

export async function sendForm(
  user: User,
  ctx: CommandContext<MyContext> | MyContext,
) {
  if (user.form_is_exist) {
    if (user.searching) {
      await ctx.reply('–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:');
      await ctx.replyWithPhoto(user.form_image_id, {
        caption: `${user.form_name}, ${user.form_city.charAt(0).toUpperCase()}${user.form_city.slice(1)}, ${user.form_age} ‚Äî ${user.form_desc}`,
        reply_markup: { remove_keyboard: true },
      });
      await ctx.reply(
        '1. üîé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ \n2. üìñ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ \n3. üí§ –Ø –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á—É –Ω–∏–∫–æ–≥–æ –∏—Å–∫–∞—Ç—å',
        {
          parse_mode: 'HTML',
          reply_markup: menuKeyboard,
        },
      );
    } else {
      await ctx.reply(
        '–¢–≤–æ—è –∞–Ω–∫–µ—Ç–∞ –Ω–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –ø–æ–∏—Å–∫–µ!\n–í—ã–±–µ—Ä–∏ –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞, —á—Ç–æ–±—ã –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —É—á–∞—Å—Ç–∏–µ.',
        { parse_mode: 'HTML' },
      );
      await ctx.reply('–¢–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–≤–æ—è –∞–Ω–∫–µ—Ç–∞:', { parse_mode: 'HTML' });
      await ctx.replyWithPhoto(user.form_image_id, {
        caption: `${user.form_name}, ${user.form_city.charAt(0).toUpperCase()}${user.form_city.slice(1)}, ${user.form_age} ‚Äî ${user.form_desc}`,
        reply_markup: { remove_keyboard: true },
      });
      await ctx.reply(
        '1. üîé –ü–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞ \n2. üìñ –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ',
        {
          parse_mode: 'HTML',
          reply_markup: menuKeyboard,
        },
      );
    }
  } else {
    await ctx.reply(
      `–£ —Ç–µ–±—è –Ω–µ—Ç—É –∞–Ω–∫–µ—Ç—ã. \n–î–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –µ—ë –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤?`,
      { parse_mode: 'HTML', reply_markup: createFormKeyboard },
    );
  }
}

export const createFormReplies: Record<schemaShapes, IReply> = {
  form_name: {
    firstReply: '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?',
    warningReply: '–í–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–µ–≤—ã—à–∞—Ç—å 25.',
  },
  form_gender: {
    firstReply: '–ö–∞–∫–æ–≥–æ —Ç—ã –ø–æ–ª–∞?',
    warningReply: '–ú–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ—ë –ø–æ–ª –ø–æ –∫–Ω–æ–ø–∫–µ.',
  },
  form_looking_for: {
    firstReply: '–ö–æ–≥–æ —Ç—ã –∏—â–µ—à—å?',
    warningReply: '–ú–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.',
  },
  form_desc: {
    firstReply: '–í–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç—ã.',
    warningReply:
      '–í–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ, –æ–Ω–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Ç–≤–æ–µ–π –∞–Ω–∫–µ—Ç–µ. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ 250.',
  },
  form_image_id: {
    firstReply: '–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë —Ñ–æ—Ç–æ.',
    warningReply: '–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë —Ñ–æ—Ç–æ, –æ–Ω–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ —Ç–≤–æ–µ–π –∞–Ω–∫–µ—Ç–µ.',
  },
  form_city: {
    firstReply: '–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –≥–æ—Ä–æ–¥.',
    warningReply: '–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å —Ç–µ–±–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞.',
  },
  form_age: {
    firstReply: '–í–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç.',
    warningReply:
      '–í–≤–µ–¥–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç, –ø–æ –Ω–µ–º—É –º—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å —Ç–µ–±–µ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞. –û—Ç 6 –¥–æ 70 –ª–µ—Ç.',
  },
};
